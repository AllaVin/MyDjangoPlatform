# Generated by Django 4.2.23 on 2025-06-12 08:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100, verbose_name="Name")),
                ("last_name", models.CharField(max_length=100, verbose_name="Surname")),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Birth"
                    ),
                ),
                (
                    "profile",
                    models.URLField(
                        blank=True, null=True, verbose_name="Link to Profile"
                    ),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        default=False,
                        help_text="If False - author is active. If True - Author is deleted",
                        verbose_name="If the author is deleted",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        blank=True,
                        default=1,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Rating",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Book title")),
                ("publishing_date", models.DateField(verbose_name="Publishing date")),
                (
                    "short_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Short description"
                    ),
                ),
                (
                    "genre",
                    models.CharField(
                        choices=[
                            ("db_view_Fiction", "Fiction"),
                            ("db_view_Non-Fiction", "Non-Fiction"),
                            ("db_view_Science Fiction", "Science Fiction"),
                            ("db_view_Fantasy", "Fantasy"),
                            ("db_view_Mystery", "Mystery"),
                            ("db_view_Biography", "Biography"),
                            ("not_set", "default"),
                        ],
                        default="not_set",
                        max_length=50,
                        verbose_name="Genre",
                    ),
                ),
                (
                    "amount_of_pages",
                    models.PositiveIntegerField(
                        blank=True,
                        default=50,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(10000)],
                        verbose_name="Amount of pages",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="library.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Category name"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("date", models.DateField()),
                (
                    "books",
                    models.ManyToManyField(related_name="events", to="library.book"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Library",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Library name")),
                (
                    "location",
                    models.CharField(
                        default="Unknown", max_length=100, verbose_name="Location"
                    ),
                ),
                (
                    "library_website",
                    models.URLField(
                        blank=True, null=True, verbose_name="Library website"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Member name")),
                (
                    "surname",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Member surname"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="Member email",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Birth"
                    ),
                ),
                (
                    "age",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(6),
                            django.core.validators.MaxValueValidator(120),
                        ],
                        verbose_name="Age",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Admin", "Admin"),
                            ("Employee", "Employee"),
                            ("Reader", "Reader"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Role of member",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is active"),
                ),
                (
                    "library",
                    models.ManyToManyField(
                        related_name="members",
                        to="library.library",
                        verbose_name="Library used by member",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.FloatField(blank=True, null=True, verbose_name="Rating"),
                ),
                ("feedback", models.TextField(verbose_name="Feedback")),
                (
                    "book",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="library.book",
                        verbose_name="Book",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="library.member",
                        verbose_name="Reviewer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Posts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Post name"
                    ),
                ),
                (
                    "text",
                    models.TextField(blank=True, null=True, verbose_name="Post text"),
                ),
                (
                    "moderated",
                    models.BooleanField(default=False, verbose_name="Moderated"),
                ),
                (
                    "created_at",
                    models.DateField(
                        auto_now_add=True, null=True, verbose_name="Created at"
                    ),
                ),
                ("updated_at", models.DateField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="library.member",
                        verbose_name="Author",
                    ),
                ),
                (
                    "library",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts",
                        to="library.library",
                        verbose_name="Library",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="library.event",
                    ),
                ),
                (
                    "member",
                    models.ManyToManyField(
                        related_name="event_participations", to="library.member"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="library",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="events",
                to="library.library",
            ),
        ),
        migrations.CreateModel(
            name="Borrow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "borrow_date",
                    models.DateField(
                        auto_now_add=True, null=True, verbose_name="Borrow date"
                    ),
                ),
                (
                    "return_date",
                    models.DateField(blank=True, null=True, verbose_name="Return date"),
                ),
                ("returned", models.BooleanField(default=False)),
                (
                    "book",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="library.book",
                        verbose_name="Book",
                    ),
                ),
                (
                    "library",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="library.library",
                        verbose_name="Library",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="borrows",
                        to="library.member",
                        verbose_name="Member",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="book",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="library.category",
                verbose_name="Category",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="library",
            field=models.ManyToManyField(
                related_name="books", to="library.library", verbose_name="Library"
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="publisher",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="library.member",
                verbose_name="Publisher",
            ),
        ),
        migrations.CreateModel(
            name="AuthorDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("biography", models.TextField()),
                ("birth_city", models.CharField(max_length=50)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "author",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="details",
                        to="library.author",
                    ),
                ),
            ],
        ),
    ]
